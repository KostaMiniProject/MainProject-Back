plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.asciidoctor.jvm.convert" version "3.3.2"
}

configurations {
	asciidoctorExt
}

group = 'kosta'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	asciidoctorExt
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	runtimeOnly 'com.mysql:mysql-connector-j'


	// Security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-test'

	// Jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//image 관련
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	// querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//RestDocs
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor:{project-version}'
	//asciidoctorExt adoc파일에서 사용할 snippets 속성이 자동으로 build/generated-snippets를 가리키도록 해줌
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc:{project-version}'

}

//RestDocs설정
ext {
	snippetsDir = file('build/generated-snippets')

//ext는 전역변수를 설정해주는 것
//생성된 조각의 출력 위치를 정의

}

test {
	outputs.dir snippetsDir
}
// 결과물인 스니펫 디렉토리를 추가하는 `test` task를 설정

asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'

	dependsOn test
	//문서가 생성되기 전에 테스트가 실행되도록 작업이 테스트 작업에 종속되
}

bootJar {
	dependsOn asciidoctor
	// jar가 빌드 되기 전에 문서가 생성되도록 합니다

	from ("${asciidoctor.outputDir}/html5") {
		into 'static/docs'
	}
	// jar의 `static/docs` 디렉토리 안에 생성된 문서를 복사합니다
}



tasks.named('test') {
	useJUnitPlatform()
}

//깃 서브모듈 설정

task copyPrivate(type: Copy) {
	copy {
		from './MainProject-Back-Data'
		include "*.yml"
		into 'src/main/resources'
	}
}

//쿼리DSL 설정
def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDir querydslDir
}
configurations {
	querydsl.extendsFrom compileClasspath
}